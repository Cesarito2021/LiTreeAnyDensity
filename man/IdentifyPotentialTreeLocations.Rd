% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{IdentifyPotentialTreeLocations}
\alias{IdentifyPotentialTreeLocations}
\title{Identify Potential Tree Stem Locations from 3D Raster Metrics}
\usage{
IdentifyPotentialTreeLocations(
  xyz_data,
  RasterMetric,
  RasterMetricSum,
  RasterMetricCount,
  voxel_size
)
}
\arguments{
\item{xyz_data}{A data frame containing 3D point coordinates with columns `x`, `y`, and `z`.}

\item{RasterMetric}{A list of binary raster layers (one per voxel slice), indicating presence of points in each voxel layer.}

\item{RasterMetricSum}{A raster layer representing the number of non-empty slices across all voxel layers per cell.}

\item{RasterMetricCount}{A raster layer representing the sum of all values (e.g., point counts or intensities) across voxel layers per cell.}

\item{voxel_size}{A numeric value indicating the voxel resolution used to generate the raster layers.}
}
\value{
A data frame containing the filtered `xyz_data` rows that are classified as potential tree stem positions.
}
\description{
This function identifies potential tree stem locations based on multi-layer voxel raster data
derived from LiDAR point clouds. It evaluates stacked raster metrics representing height slices
and applies spatial and contextual filters to locate the most likely positions of tree stems.
This function is typically used after voxelizing point clouds with a consistent voxel size.
}
\examples{
\dontrun{
# Assuming voxel-based rasters have been calculated previously
potential_stems <- IdentifyPotentialTreeLocations(
  xyz_data = point_cloud_xyz,
  RasterMetric = voxel_layers,
  RasterMetricSum = raster_metric_sum,
  RasterMetricCount = raster_metric_count,
  voxel_size = 0.5
)
}

}
