% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/architecture.R
\name{rmc}
\alias{rmc}
\title{Multiple Circle Detection Using the RANSAC Algorithm}
\usage{
rmc(data, n, k, t, d, max_circles)
}
\arguments{
\item{data}{A data frame containing at least the columns `x`, `y`, and `z`, representing the 3D coordinates of the points.}

\item{n}{An integer specifying the minimum number of points required to fit a model (typically 3 for a circle).}

\item{k}{An integer indicating the maximum number of iterations allowed in each RANSAC cycle.}

\item{t}{A numeric threshold that determines whether a point is considered an inlier based on its distance to the circle.}

\item{d}{An integer specifying the minimum number of inliers required for a circle to be considered valid.}

\item{max_circles}{Maximum number of circles to detect in the point cloud.}
}
\value{
A list of circle models, each containing the fitted parameters (`par` = center x, center y, radius) and the average height (`height`) of the points that belong to that circle.
}
\description{
This function detects and fits multiple circles within a 2D point cloud using the RANSAC (Random Sample Consensus) algorithm. It iteratively applies a robust fitting procedure to identify circular shapes (e.g., tree trunks) and removes inliers after each detection to allow for the next circle to be found.
}
\details{
This function calls \code{rc()} internally for each circle to be detected. After each valid detection, inlier points are removed to allow detection of additional non-overlapping circles.
}
